------------------Exploratory Data Analysis-------------------------------------------------
--General Questions
SELECT *FROM MEMBER;
SELECT *FROM book;
SELECT *FROM BOOK_ISSUE_DETAILS;
--1.Write a query to display member name along with no of times 
--he/she issue books till now
SELECT M.MEMBER_NAME ,COUNT(*)
FROM MEMBER M JOIN BOOK_ISSUE_DETAILS D
ON M.MEMBER_ID=D.MEMBER_ID
GROUP BY M.MEMBER_NAME;


--2.Write a query to display member name along with  no of times he/she paid penalty for book issue
SELECT 
M.MEMBER_NAME,
COUNT(*) AS TOTAL_COUNT
FROM MEMBER M LEFT JOIN BOOK_ISSUE_DETAILS B
ON(M.MEMBER_ID=B.MEMBER_ID)
WHERE PENALTY_IF_ANY>0
GROUP BY M.MEMBER_NAME;

SELECT M.MEMBER_NAME,COUNT(*)
FROM MEMBER M JOIN BOOK_ISSUE_DETAILS D
ON M.MEMBER_ID=D.MEMBER_ID
WHERE PENALTY_IF_ANY>0
GROUP BY M.MEMBER_NAME;

--3.Write a query to display details of members M167 & M107 
--that which category book they issued in year 2021
SELECT 
M.MEMBER_NAME,
B.ISSUE_DATE,
C.CATEGORY
FROM MEMBER M LEFT JOIN BOOK_ISSUE_DETAILS B
ON(M.MEMBER_ID=B.MEMBER_ID)
JOIN BOOK C ON (B.BOOK_ID=C.BOOK_ID)
WHERE EXTRACT (YEAR FROM B.ISSUE_DATE)=2021
AND M.MEMBER_ID='M107' AND M.MEMBER_ID='M167';


SELECT M.MEMBER_NAME,B.CATEGORY
FROM MEMBER M JOIN BOOK_ISSUE_DETAILS D
ON M.MEMBER_ID=D.MEMBER_ID
JOIN BOOK B
ON D.BOOK_ID=B.BOOK_ID
WHERE M.MEMBER_ID IN ('M107','M167')
AND TO_CHAR(D.ISSUE_DATE,'YYYY')='2021';


--4.Write a query to display total no of books and their cost
SELECT 
SUM(BOOKCOPIES) AS TOTAL_COUNT,
SUM(BOOKCOPIES * COST_PER_BOOK) AS TOTAL_COST
FROM BOOK;

SELECT SUM(BOOKCOPIES)AS TOTAL_BOOK,SUM(COST_PER_BOOK *BOOKCOPIES)AS TOTAL_PRICE
FROM BOOK;

--5.Write a query to display details of those members wo paid penalty
--  more than 3 times sor far.
SELECT 
M.MEMBER_NAME,
B.PENALTY_IF_ANY,
COUNT(B.PENALTY_IF_ANY) AS CNT
FROM MEMBER M LEFT JOIN BOOK_ISSUE_DETAILS B
ON (M.MEMBER_ID=B.MEMBER_ID)
WHERE B.PENALTY_IF_ANY IS NOT NULL
GROUP BY M.MEMBER_NAME,
B.PENALTY_IF_ANY 
HAVING COUNT(B.PENALTY_IF_ANY)>3;


SELECT M.MEMBER_NAME,COUNT(D.STATUS)
FROM MEMBER M JOIN BOOK_ISSUE_DETAILS D
ON M.MEMBER_ID=D.MEMBER_ID
WHERE UPPER(D.STATUS) = 'RETURN WITH PENALTY'
GROUP BY  M.MEMBER_NAME
HAVING COUNT(D.STATUS)>3;


--6.Write a query to display details of those members who issued book in 
-- feb 2021 but not return;
SELECT 
M.MEMBER_NAME,
B.ISSUE_DATE
FROM MEMBER M LEFT JOIN BOOK_ISSUE_DETAILS B
ON(M.MEMBER_ID=B.MEMBER_ID)
WHERE B.ISSUE_DATE LIKE '%-02-21'
AND
B.RETURN_DATE IS NULL;

SELECT M.MEMBER_NAME
FROM MEMBER M JOIN BOOK_ISSUE_DETAILS D
ON M.MEMBER_ID=D.MEMBER_ID
WHERE TO_CHAR(ISSUE_DATE,'MON-YYYY')='FEB-2021'
AND STATUS='NOT RETURN YET';

--7.Write a query to display who are the members of library but never issued book
SELECT MEMBER_NAME
FROM MEMBER 
WHERE MEMBER_ID NOT IN (SELECT MEMBER_ID FROM BOOK_ISSUE_DETAILS);


--8.Write a query to display how many women left membership in 2021
SELECT 
MEMBER_NAME,
COUNT(MEMBER_ID)
FROM MEMBER
WHERE UPPER(GENDER)='F' AND 
TO_CHAR(MEMBERSHIP_END_DATE,'YYYY')='2021'
GROUP BY MEMBER_NAME,
GENDER;

SELECT *
FROM MEMBER
WHERE TO_CHAR(MEMBERSHIP_END_DATE,'YYYY')='2021'
AND GENDER='F';

--9.Write a query to display how many senior citizen (age>60) join Membership
--in last year?
SELECT COUNT(*)
FROM MEMBER M 
WHERE AGE > 60
AND TO_CHAR(m.membership_start_date,'YYYY') =
TO_CHAR(ADD_MONTHS(SYSDATE,-12),'YYYY');


--10.Write a query to display every month-year wise penalty received
SELECT
TO_CHAR(RETURN_DATE,'MON-YYYY'),
COUNT(PENALTY_IF_ANY)
FROM book_issue_details
GROUP BY TO_CHAR(RETURN_DATE,'MON-YYYY');

SELECT TO_CHAR(RETURN_DATE,'MON-YYYY'),SUM(PENALTY_IF_ANY)
FROM BOOK_ISSUE_DETAILS
WHERE STATUS='RETURN WITH PENALTY'
GROUP BY TO_CHAR(RETURN_DATE,'MON-YYYY');


DESC BOOK;
DESC MEMBER;
DESC BOOK_ISSUE_DETAILS;

SELECT 
TO_CHAR(ADD_MONTHS(SYSDATE,-12),'YYYY')
FROM DUAL;








